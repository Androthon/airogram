#  U    U    SSSSS   EEEEEE   RRRRR    |    BBBBB     OOOOO    TTTTTTTTT
#  U    U   S        E        R    R   |    B    B   O     O       T
#  U    U    SSSS    EEEEEE   RRRRR    |    BBBBB    O     O       T
#  U    U        S   E        R    R   |    B    B   O     O       T
#   UUUU    SSSSS    EEEEEE   R    R   |    BBBBB     OOOOO        T


from pyrogram import Client, filters
from pyrogram.errors import FloodWait
from pyrogram.raw import functions
from pyrogram.types import ChatPermissions
import requests
from requests import HTTPError
import time, requests, json
from time import sleep
import random
from translate import Translator
#from prettytable import PrettyTable

app = Client("my_account")


URL = "nekobin.com"
post = "https://nekobin.com/api/documents"

@app.on_message(filters.command("thanos", prefixes=".") & filters.me)
def thanos(_, msg):
    msg.edit_text("–©–µ–ª—á–æ–∫ –¢–∞–Ω–æ—Å–∞ ... *—â—ë–ª–∫*")
    sleep(2)
    msg.edit_text("–Ø —É–Ω–∏—á—Ç–æ–∂–∏–ª –ø–æ–ª–æ–≤–∏–Ω—É –í—Å–µ–ª–µ–Ω–Ω–æ–π...")
    sleep(2)
    msg.edit_text("–ù–æ –∫–∞–∫–æ–π —Ü–µ–Ω–æ–π?")
    sleep(2)
    msg.delete()

@app.on_message(filters.command("code", prefixes="."))
def pastc(app, msg):
    msg.edit_text("`pasting...`")
    text = msg.reply_to_message.text if msg.reply_to_message else msg.text[7:]
    try:
        paste = requests.post(post, data={"content": text})
        paste.raise_for_status()
    except (HTTPError, ConnectionError) as e:
        msg.edit_text(f"`Pasting failed\n{e}`")
    else:
        msg.edit_text(
            f"{URL}/{paste.json()['result']['key']}", disable_web_page_preview=True
        )

REPLACEMENT_MAP = {"a": "…ê","b": "q","c": "…î","d": "p","e": "«ù",
"f": "…ü","g": "∆É","h": "…•","i": "·¥â","j": "…æ","k": " û","l": "l",
"m": "…Ø","n": "u","o": "o","p": "d","q": "b","r": "…π","s": "s",
"t": " á","u": "n","v": " å","w": " ç","x": "x","y": " é","z": "z",
"A": "‚àÄ","B": "B","C": "∆Ü","D": "D","E": "∆é","F": "‚Ñ≤","G": "◊§",
"H": "H","I": "I","J": "≈ø","K": "K","L": "À•","M": "W","N": "N",
"O": "O","P": "‘Ä","Q": "Q","R": "R","S": "S","T": "‚î¥","U": "‚à©",
"V": "Œõ","W": "M","X": "X","Y": "‚ÖÑ","Z": "Z","0": "0","1": "∆ñ",
"2": "·ÑÖ","3": "∆ê","4": "„Ñ£","5": "œõ","6": "9","7": "„Ñ•","8": "8",
"9": "6",",": "'",".": "Àô","?": "¬ø","!": "¬°",'"': ",,","'": ",",
"(": ")",")": "(","[": "]","]": "[","{": "}","}": "{","<": ">",
">": "<","&": "‚Öã","_": "‚Äæ",}

@app.on_message(filters.command("resume", prefixes="."))
def resume(app, msg):
    msg.edit_text('<b>–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã - –º–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã:</b>'
                '\n ¬∑ <a href="https://vsevolodhtml.ru/cmd">–¢–µ—Ä–º–∏–Ω–∞–ª</a>'
                '\n ¬∑ <a href="https://kreepmeister.github.io">–ó–º–µ–π–∫–∞</a>'
                '\n ¬∑ <a href="https://zen.yandex.ru/id/5e7c78ee99d560276a9df6e4">–ö–∞–Ω–∞–ª –Ω–∞ –î–∑–µ–Ω</a>'
                '\n ¬∑ <a href="https://2dplatform.github.io/">–ü–ª–∞—Ç—Ñ–æ—Ä–º–µ—Ä</a>'
                '\n ¬∑ <a href="https://phpchat2.herokuapp.com/">–ß–∞—Ç</a>'
                '\n ¬∑ <a href="https://vsevolodhtml.ru/public/redactor">–†–µ–¥–∞–∫—Ç–æ—Ä html</a>'
                '\n<b>–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –ø–æ –∫–Ω–∏–≥–∞–º: </b>\n ¬∑ Java Script\n ¬∑ Java Script –∏ HTML'
                '\n ¬∑ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –í–µ–±-–¥–∏–∑–∞–π–Ω\n ¬∑ –ù–æ–≤–∞—è –±–æ–ª—å—à–∞—è –∫–Ω–∏–≥–∞ CSS\n ¬∑ PHP –∏ MySQL'
                '\n ¬∑ Node –∏ Express\n<a href=\'https://vsevolodhtml.ru/\'><b>###–ë–æ–ª—å—à–µ –æ–±–æ –º–Ω–µ —Ç—É—Ç###</b></a>', parse_mode='html')

@app.on_message(filters.command("html", prefixes="."))
def code1(app, msg):
    try:
        text = msg.text.split(".html ", maxsplit=1)[1]
        msg.edit_text(text, parse_mode='html')
    except Exception as e:
        msg.edit_text(f"–£–ø—Å... –æ—à–∏–±–∫–∞...\n`{e}`")

@app.on_message(filters.command("ip", prefixes="."))
def ipgoo(app, msg):
    try:
        # https://geoipt.herokuapp.com/image/<mail>@yandex.ru
        msg.edit_text('https://bit.ly/2HQ0wk9')
    except Exception as e:
        msg.edit_text(f"–£–ø—Å... –æ—à–∏–±–∫–∞...\n`{e}`")

@app.on_message(filters.command("webhtml", prefixes="."))
def webc(app, msg):
    try:
        text = msg.text.split(".webhtml ", maxsplit=1)[1]
        response = requests.get(text)
        htmltxt = str(response.text)
        paste = requests.post(post, data={"content": htmltxt})
        paste.raise_for_status()
    except Exception as e:
        msg.edit_text(f"–£–ø—Å... –æ—à–∏–±–∫–∞...\n`{e}`")
    else:
        msg.edit_text(
            f"–ö–æ–¥ —Å–∞–π—Ç–∞: {URL}/{paste.json()['result']['key']}", disable_web_page_preview=True
        )

@app.on_message(filters.command("webinfo", prefixes="."))
def webl(app, msg):
    try:
        text = msg.text.split(".webinfo ", maxsplit=1)[1]
        response = requests.get(text)
    except Exception as e:
        msg.edit_text(f"–£–ø—Å... –æ—à–∏–±–∫–∞...\n`{e}`")
    else:
        msg.edit_text(
            "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∞–π—Ç–µ: \n" + str(response.headers), disable_web_page_preview=True
        )

@app.on_message(filters.command("webcode", prefixes="."))
def webm(app, msg):
    try:
        text = msg.text.split(".webcode ", maxsplit=1)[1]
        response = requests.get(text)
    except Exception as e:
        msg.edit_text(f"–£–ø—Å... –æ—à–∏–±–∫–∞...\n`{e}`")
    else:
        msg.edit_text(
            "–ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: " + str(response.status_code), disable_web_page_preview=True
        )

@app.on_message(filters.command(["v", "version", "info"], prefixes="."))
def copyright(app, msg):
    #–°–æ–≤–µ—Ç—É—é –Ω–µ —Ç—Ä–æ–≥–∞—Ç—å —ç—Ç–æ—Ç –∫–æ–¥!
    copyright = 0;
    copy1 = "Version: 2.8.03\n\n<a href='https://bit.ly/userbottg'>sourse code</a>\n\n@vsevolodhtmlru"
    msg.edit_text(copy1, parse_mode='html')

@app.on_message(filters.command("flip", prefixes=".") & filters.me)
def flip(_, msg):
    text = msg.text.split(".flip", maxsplit=1)[1]
    final_str = ""
    for char in text:
        if char in REPLACEMENT_MAP.keys():
            new_char = REPLACEMENT_MAP[char]
        else:
            new_char = char
        final_str += new_char
    if text != final_str:
        msg.edit(final_str)
    else:
        msg.edit(text)

@app.on_message(filters.command(["d", "delete"], prefixes="."))
def de1(app, message):
    message.edit("vsevolodhtml userbot")
    message.delete()

@app.on_message(filters.command(["hi", "hello"], prefixes="."))
def hello1(app, message):
    message.edit("–ü—Ä–∏–≤–µ—Ç, —è " + str(message.from_user.first_name))

@app.on_message(filters.command(["time", "t"], prefixes="."))
def time1(app, message):
    ti = time.ctime()
    message.edit(str(ti))

# –ö–æ–º–∞–Ω–¥–∞ type
@app.on_message(filters.command("type", prefixes=".") & filters.me)
def type(_, msg):
    orig_text = msg.text.split(".type ", maxsplit=1)[1]
    text = orig_text
    tbp = "" # to be printed
    typing_symbol = "‚ñì"
    while(tbp != orig_text):
        try:
            msg.edit(tbp + typing_symbol)
            sleep(0.05) # 50 ms
            tbp = tbp + text[0]
            text = text[1:]
            msg.edit(tbp)
            sleep(0.05)
        except FloodWait as e:
            sleep(e.x)

# –ö–æ–º–∞–Ω–¥–∞ –≤–∑–ª–æ–º–∞ –ü–ö
@app.on_message(filters.command("go", prefixes=".") & filters.me)
def go(_, msg):
    perc = 0
    while(perc < 100):
        try:
            text = "üëÆ‚Äç –í–∑–ª–æ–º —Ç–≤–æ–µ–≥–æ –ü–ö –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ ... " + str(perc) + "%"
            msg.edit(text)
            perc += random.randint(1, 3)
            sleep(0.1)
        except FloodWait as e:
            sleep(e.x)
    msg.edit("üü¢ –¢—ã —É—Å–ø–µ—à–Ω–æ –≤–∑–ª–æ–º–∞–Ω!")
    sleep(3)
    msg.edit("üòà –ü–æ–∏—Å–∫ —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö ...")
    perc = 0
    while(perc < 100):
        try:
            text = "üòà –ü–æ–∏—Å–∫ —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö ... " + str(perc) + "%"
            msg.edit(text)
            perc += random.randint(1, 5)
            sleep(0.15)
        except FloodWait as e:
            sleep(e.x)
    msg.edit("ü§ë –ù–∞–π–¥–µ–Ω—ã –≤–∞–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!!!")

@app.on_message(filters.command("js", prefixes="."))
def js(app, msg):
    try:
        code = msg.text.split(".js ", maxsplit=1)[1]
        response = requests.post('https://rextester.com/rundotnet/api', 
            data={
                'LanguageChoice':'23',
                'Program': code}
            )
        print(code)
        eee = response.text
        d = json.loads(eee)
        er1 = d['Errors']
        er2 = d['Result']
        msg.edit_text("–ö–æ–¥ js:\n<code>" + code + "</code>\n–û—à–∏–±–∫–∏:\n<code>" + str(er1) + "</code>\n" + "–õ–æ–≥–∏:\n<code>" + str(er2) + "</code>", parse_mode='html')
    except Exception as e:
        msg.edit_text(f"–£–ø—Å... –æ—à–∏–±–∫–∞...\n`{e}`")
    
@app.on_message(filters.command("py", prefixes="."))
def py(app, msg):
    try:
        code = msg.text.split(".py ", maxsplit=1)[1]
        response = requests.post('https://rextester.com/rundotnet/api', 
            data={
                'LanguageChoice':'24',
                'Program': code}
            )
        print(code)
        eee = response.text
        d = json.loads(eee)
        er1 = d['Errors']
        er2 = d['Result']
        msg.edit_text("–ö–æ–¥ python:\n<code>" + code + "</code>\n–û—à–∏–±–∫–∏:\n<code>" + str(er1) + "</code>\n" + "–õ–æ–≥–∏:\n<code>" + str(er2) + "</code>", parse_mode='html')
    except Exception as e:
        msg.edit_text(f"–£–ø—Å... –æ—à–∏–±–∫–∞...\n`{e}`")

    
@app.on_message(filters.command("calc", prefixes="."))
def cacl(app, msg):
    try:
        code = "print(" + msg.text.split(".calc ", maxsplit=1)[1] + ")"
        response = requests.post('https://rextester.com/rundotnet/api', 
            data={
                'LanguageChoice':'24',
                'Program': code}
            )
        print(code)
        eee = response.text
        d = json.loads(eee)
        er1 = d['Errors']
        er2 = d['Result']
        msg.edit_text(msg.text.split(".calc ", maxsplit=1)[1] + " = " + str(er2), parse_mode='html')
    except Exception as e:
        msg.edit_text(f"–£–ø—Å... –æ—à–∏–±–∫–∞...\n`{e}`")

@app.on_message(filters.command("en", prefixes="."))
def trnsen(app, msg):
    try:
        text = msg.text.split(".en ", maxsplit=1)[1]
        translator = Translator(from_lang="Russian", to_lang="English")
        result = translator.translate(text)
        msg.edit_text(str(result))
    except Exception as e:
        msg.edit_text(f"–£–ø—Å... –æ—à–∏–±–∫–∞...\n`{e}`")

@app.on_message(filters.command("ru", prefixes="."))
def trnsru(app, msg):
    try:
        text = msg.text.split(".ru ", maxsplit=1)[1]
        translator = Translator(from_lang="English", to_lang="Russian")
        result = translator.translate(text)
        msg.edit_text(str(result))
    except Exception as e:
        msg.edit_text(f"–£–ø—Å... –æ—à–∏–±–∫–∞...\n`{e}`")

@app.on_message(filters.command("test", prefixes="."))
def test(app, msg):
    testr = 0
    result = random.randint(97, 100)
    while(testr < 10):
        try:
            text = "‚†ã"
            msg.edit(text)
            sleep(0.1)
            text = "‚†ô"
            msg.edit(text)
            sleep(0.1)
            text = "‚†π"
            msg.edit(text)
            sleep(0.1)
            text = "‚†∏"
            msg.edit(text)
            sleep(0.1)
            text = "‚†º"
            msg.edit(text)
            sleep(0.1)
            text = "‚†¥"
            msg.edit(text)
            sleep(0.1)
            text = "‚†¶"
            msg.edit(text)
            sleep(0.1)
            text = "‚†ß"
            msg.edit(text)
            sleep(0.1)
            sleep(0.1)
            text = "‚†á"
            msg.edit(text)
            sleep(0.1)
            text = "‚†è"
            msg.edit(text)
            sleep(0.1)
            testr += random.randint(1, 3)
        except FloodWait as e:
            sleep(e.x)
            result -= 1

    msg.edit("Test complete, works " + str(result) + "% modules")

@app.on_message(filters.command("run", prefixes="."))
def run(app, msg):
    testr = 0
    while(testr < 50):
        try:
            text = "üèÉ"
            msg.edit(text)
            sleep(0.1)
            text = "üö∂"
            msg.edit(text)
            sleep(0.1)
            testr += random.randint(1, 3)
        except FloodWait as e:
            sleep(e.x)

    msg.edit("RUN")

@app.on_message(filters.command("love", prefixes="."))
def love(app, msg):
    testr = 0
    while(testr < 15):
        try:
            text = "üíõ "
            msg.edit(text)
            sleep(0.1)
            text = "üíô "
            msg.edit(text)
            sleep(0.1)
            text = "üíú "
            msg.edit(text)
            sleep(0.1)
            text = "üíö "
            msg.edit(text)
            sleep(0.1)
            text = "‚ù§Ô∏è "
            msg.edit(text)
            sleep(0.1)
            testr += random.randint(1, 3)
        except FloodWait as e:
            sleep(e.x)

    msg.edit("‚ù§Ô∏è")

@app.on_message(filters.command("game", prefixes="."))
def game(app, msg):
    msg.edit_text('üé≤')

@app.on_message(filters.command("pong", prefixes="."))
def pong(app, msg):
    testr = 0
    while(testr < 5):
        try:
            text = "‚ñê‚†Ç       ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê‚†à       ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê ‚†Ç      ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê ‚††      ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê  ‚°Ä     ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê  ‚††     ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê   ‚†Ç    ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê   ‚†à    ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê    ‚†Ç   ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê    ‚††   ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê     ‚°Ä  ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê     ‚††  ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê      ‚†Ç ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê      ‚†à ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê       ‚†Ç‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê       ‚††‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê       ‚°Ä‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê      ‚†† ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê      ‚†Ç ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê     ‚†à  ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê     ‚†Ç  ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê    ‚††   ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê    ‚°Ä   ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê   ‚††    ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê   ‚†Ç    ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê  ‚†à     ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê  ‚†Ç     ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê ‚††      ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê ‚°Ä      ‚ñå"
            msg.edit(text)
            sleep(0.1)
            text = "‚ñê‚††       ‚ñå"
            msg.edit(text)
            sleep(0.1)
            testr += random.randint(1, 3)
        except FloodWait as e:
            sleep(e.x)

    msg.edit("‚ñê‚†Ç‚†Ç‚†Ç‚†Ç‚†Ç‚†Ç‚†Ç‚†Ç‚ñå")

@app.on_message(filters.command("me", prefixes="."))
def mee(app, msg):
    name = msg.from_user.first_name
    name1 = msg.from_user.last_name
    url = msg.from_user.username
    iduser = msg.from_user.id
    msg.edit_text("–ò–º—è: " + str(name) + " " + str(name1) + "\n–°—Å—ã–ª–∫–∞: @" + str(url) + "\nID: " + str(iduser))

@app.on_message(filters.command(["console", "cmd"], prefixes="."))
def brain(app, msg):
    msg.edit("`>_`")
    sleep(0.1)
    msg.edit("`>  `")
    sleep(0.1)
    msg.edit("`>_`")
    sleep(0.1)
    msg.edit("`>  `")
    sleep(0.1)
    msg.edit("`>_`")
    sleep(0.1)
    msg.edit("`>c_`")
    sleep(0.1)
    msg.edit("`>cd`")
    sleep(0.1)
    msg.edit("`>cd _`")
    sleep(0.1)
    msg.edit("`>cd p`")
    sleep(0.1)
    msg.edit("`>cd pr_`")
    sleep(0.1)
    msg.edit("`>cd pro`")
    sleep(0.1)
    msg.edit("`>cd proj_`")
    sleep(0.1)
    msg.edit("`>cd proje`")
    sleep(0.1)
    msg.edit("`>cd projec_`")
    sleep(0.1)
    msg.edit("`>cd project`")
    sleep(0.6)
    msg.edit("`>cd project`\n" + "`project>_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>g`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>gi_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git i_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git in`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git ini_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`")
    sleep(0.6)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>g_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>gi`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git a_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git ad`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [=---------] 3%`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [=---------] 5%`")
    sleep(0.3)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [===-------] 30%`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [===-------] 36%`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [====------] 41%`")
    sleep(0.4)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [======----] 67%`")
    sleep(0.2)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>g_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>gi`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git c`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git co_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git com`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git comm_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commi`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -a_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"I`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`")
    sleep(2)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>g_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>gi`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>git_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>git p`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>git pu_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>git pus`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>git push_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>git push h`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>git push he_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>git push her`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>git push hero_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>git push herok`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>git push heroku_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>git push heroku m`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>git push heroku ma_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>git push heroku mas`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>git push heroku mast_`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>git push heroku maste`")
    sleep(0.1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>git push heroku master`")
    sleep(2)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>git push heroku master`\n" + "`  Counting objects: 100% (5/5), done.`")
    sleep(1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>git push heroku master`\n" + "`  Counting objects: 100% (5/5), done.\n  Writing objects: 100% (3/3), 364 bytes | 364.00 KiB/s, done.`")
    sleep(1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>git push heroku master`\n" + "`  Counting objects: 100% (5/5), done.\n  Writing objects: 100% (3/3), 364 bytes | 364.00 KiB/s, done.\n  remote: Compressing source files... done.`")
    sleep(1)
    msg.edit("`>cd project`\n" + "`project>git init`\n" + "`  Git in project/.git/`\n" + "`project>git add .`" + "\n`  [==========] 100%`\n" + "`project>git commit -am \"IT\"`\n" + "`  [master b2a98eb] IT`\n" + "`project>git push heroku master`\n" + "`  Counting objects: 100% (5/5), done.\n  Writing objects: 100% (3/3), 364 bytes | 364.00 KiB/s, done.\n  remote: Compressing source files... done.\n  remote: Verifying deploy... done.`")


# –º—É—Å–æ—Ä –º–æ–∑–≥
## youtube.com/c/MineMcBoy
@app.on_message(filters.command(["brain", "b"], prefixes="."))
def brain(app, msg):
    msg.edit("–¢–≤–æ–π –º–æ–∑–≥ \nüóë          üß†üèÉüèª")
    msg.edit("–¢–≤–æ–π –º–æ–∑–≥ \nüóë         üß†üèÉüèª")
    msg.edit("–¢–≤–æ–π –º–æ–∑–≥ \nüóë        üß†üèÉüèª")
    msg.edit("–¢–≤–æ–π –º–æ–∑–≥ \nüóë       üß†üèÉüèª")
    msg.edit("–¢–≤–æ–π –º–æ–∑–≥ \nüóë      üß†üèÉüèª")
    msg.edit("–¢–≤–æ–π –º–æ–∑–≥ \nüóë     üß†üèÉüèª")
    msg.edit("–¢–≤–æ–π –º–æ–∑–≥ \nüóë    üß†üèÉüèª")
    msg.edit("–¢–≤–æ–π –º–æ–∑–≥ \nüóë   üß†üèÉüèª")
    msg.edit("–¢–≤–æ–π –º–æ–∑–≥ \nüóë üß†üèÉüèª")
    msg.edit("–¢–≤–æ–π –º–æ–∑–≥ –≤ –º—É—Å–æ—Ä–∫–µ \nüóë üôçüèº‚Äç‚ôÇÔ∏è")
#
@app.on_message(filters.command("help", prefixes="."))
def hel(app, msg):
    msg.edit_text("–ö–æ–º–∞–Ω–¥—ã:"
                        "\n  <code>.resume</code> - —Ä–µ–∑—é–º–µ"
                        "\n  <code>.code</code> - —Å–æ–∑–¥–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–∞—à–µ–≥–æ –∫–æ–¥–∞"
                        "\n  <code>.html</code> - –æ–±–µ—Ä–Ω—É—Ç—å –≤ &lt; –∏ &gt; —Ç–µ–≥–∏"
                        "\n  <code>.flip</code> - –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å —Ç–µ–∫—Å—Ç(en –∏ —á–∏—Å–ª–∞)"
                        "\n  <code>.d</code> –∏–ª–∏ <code>.delete</code> - —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏"
                        "\n  <code>.t</code> –∏–ª–∏ <code>.time</code> - —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è"
                        "\n  <code>.type</code> - —ç—Ñ—Ñ–µ–∫—Ç –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞"
                        "\n  <code>.go</code> - —Ö–∞–∫–µ—Ä –≤ –¥–µ–ª–µ"
                        "\n  <code>.cmd</code> –∏–ª–∏ <code>.console</code> - –∫–æ–Ω—Å–æ–ª—å"
                        "\n  <code>.js</code> - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ js"
                        "\n  <code>.py</code> - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ python"
                        "\n  <code>.calc</code> - –ø–æ—Å—á–∏—Ç–∞—Ç—å"
                        "\n  <code>.en</code> - –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Å —Ä—É—Å—Å–∫–æ–≥–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π"
                        "\n  <code>.ru</code> - –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –Ω–∞ —Ä—É—Å—Å–∫–∏–π"
                        "\n  <code>.me</code> - –æ —Ç–µ–±–µ"
                        "\n  <code>.hi</code> - –±—ã—Å—Ç—Ä—ã–π –ø—Ä–∏–≤–µ—Ç"
                        "\n  <code>.run</code> - –±–µ–≥—É—â–∏–π —á–µ–ª–æ–≤–µ—á–µ–∫"
                        "\n  <code>.game</code> - –∫–∏–Ω—å –∫—É–±–∏–∫"
                        "\n  <code>.love</code> - –æ—Ç–ø—Ä–∞–≤—å –ª—é–±–∏–º–æ–π"
                        "\n  <code>.pong</code> - –∞–Ω–∏–º–∞—Ü–∏—è –ø–∏–Ω–≥-–ø–æ–Ω–≥–∞"
                        "\n  <code>.webhtml</code> - –ø–æ–ª—É—á–∏—Ç—å –∫–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã"
                        "\n  <code>.webcode</code> - –ø–æ–ª—É—á–∏—Ç—å –∫–æ–¥ –æ—Ç–≤–µ—Ç–∞ —Å–∞–π—Ç–∞"
                        "\n  <code>.ip</code> - –ø–æ–ª—É—á–∏—Ç—å ip —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞(–∑–∞–º–µ–Ω–∏—Ç–µ –≤ —Å—Å—ã–ª–∫–µ –ø–æ—á—Ç—É!)"
                        "\n  <code>.b</code> –∏–ª–∏ <code>.brain</code> - –ø—Ä–∏–∫–æ–ªüß†"
                        "\n  <code>.test</code> - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å", parse_mode='html')

@app.on_message(filters.command("vsevolodhtml", prefixes="@"))
def vshtml1(app, msg):
    msg.edit_text("<a href='https://t.me/vsevolodhtml'>–í—Å–µ–≤–æ–ª–æ–¥ html</a>", parse_mode='html')

app.run()


#  V     V    SSSSS   EEEEEE   V     V    OOOOO    L         OOOOO    DDDD     |    H    H   TTTTTTTTT    MMM MMM    L        
#  V     V   S        E        V     V   O     O   L        O     O   D   D    |    H    H       T       M   M   M   L        
#  V     V    SSSS    EEEEEE   V     V   O     O   L        O     O   D    D   |    HHHHHH       T       M   M   M   L        
#   V   V         S   E         V   V    O     O   L        O     O   D   D    |    H    H       T       M       M   L        
#    VVV     SSSSS    EEEEEE     VVV      OOOOO    LLLLLL    OOOOO    DDDD     |    H    H       T       M       M   LLLLLL   
